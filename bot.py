import asyncio
import logging
from flask import Flask
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Flask-–∑–∞–≥–ª—É—à–∫–∞
flask_app = Flask(__name__)

@flask_app.route("/")
def index():
    return "–î–æ–∫ –ö—É—Ä–∏–ª–µ–Ω–∫–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! üå∏"

# –•—ç–Ω–¥–ª–µ—Ä—ã
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    reply_keyboard = [["–û—Å–º–æ—Ç—Ä", "–£–ó–ò", "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è"]]
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –î–æ–∫ –ö—É—Ä–∏–ª–µ–Ω–∫–æ üå∏\n–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω:",
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True)
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–æ—Ç–æ–∫–æ–ª –ø—Ä–∏–Ω—è—Ç. –°–ø–∞—Å–∏–±–æ üå∏")

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
async def main():
    application = ApplicationBuilder().token("7495233579:AAGKqPpZY0vd3ZK9a1ljAbZjEehCCMhFIdU").build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    await application.initialize()
    await application.start()
    logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    await application.updater.start_polling()
    await application.updater.wait()

if __name__ == "__main__":
    import threading

    # Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    threading.Thread(target=lambda: flask_app.run(host="0.0.0.0", port=10000)).start()
    asyncio.run(main())
