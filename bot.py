
import logging
import asyncio
import nest_asyncio
from flask import Flask
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)
logger.info("üîß –°—Ç–∞—Ä—Ç bot.py")

app = Flask(__name__)

@app.route('/')
def index():
    return '–î–æ–∫ –ö—É—Ä–∏–ª–µ–Ω–∫–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! üå∏'

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    reply_keyboard = [['–û—Å–º–æ—Ç—Ä', '–£–ó–ò', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è']]
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –î–æ–∫ –ö—É—Ä–∏–ª–µ–Ω–∫–æ üå∏
–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω:",
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True)
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–æ—Ç–æ–∫–æ–ª –ø—Ä–∏–Ω—è—Ç. –°–ø–∞—Å–∏–±–æ üå∏")

async def run_bot():
    application = ApplicationBuilder().token("7495233579:AAGKqPpZY0vd3ZK9a1ljAbZjEehCCMhFIdU").build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    await application.run_polling()

if __name__ == "__main__":
    nest_asyncio.apply()
    loop = asyncio.get_event_loop()
    loop.create_task(run_bot())
    app.run(host="0.0.0.0", port=10000)
