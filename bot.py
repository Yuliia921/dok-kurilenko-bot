
import asyncio
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
import logging
from flask import Flask

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –•—ç–Ω–¥–ª–µ—Ä /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    reply_keyboard = [['–û—Å–º–æ—Ç—Ä', '–£–ó–ò', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è']]
    await update.message.reply_text(
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –î–æ–∫ –ö—É—Ä–∏–ª–µ–Ω–∫–æ üå∏\n–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω:',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True)
    )

# –•—ç–Ω–¥–ª–µ—Ä —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–æ—Ç–æ–∫–æ–ª –ø—Ä–∏–Ω—è—Ç. –°–ø–∞—Å–∏–±–æ üå∏")

# Telegram-–±–æ—Ç –∫–∞–∫ async-–∑–∞–¥–∞—á–∞
async def telegram_task():
    app = ApplicationBuilder().token("7591394007:AAHBZWhMJgpmnKY85suJaJ5AW_RpwPTZ9VI").build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    await app.initialize()
    await app.start()
    await app.bot.set_my_commands([("start", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")])
    await app.updater.start_polling()
    await app.updater.idle()

# Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–∞–∫ async-–∑–∞–¥–∞—á–∞
async def flask_task():
    flask_app = Flask(__name__)

    @flask_app.route('/')
    def index():
        return '–î–æ–∫ –ö—É—Ä–∏–ª–µ–Ω–∫–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! üå∏'

    from werkzeug.serving import run_simple
    run_simple("0.0.0.0", 10000, flask_app, use_reloader=False)

# –ì–ª–∞–≤–Ω—ã–π –∑–∞–ø—É—Å–∫: –∑–∞–ø—É—Å–∫–∞–µ–º –æ–±–∞ async-–∑–∞–¥–∞—á–∏
async def main():
    await asyncio.gather(
        telegram_task(),
        flask_task()
    )

if __name__ == '__main__':
    asyncio.run(main())
