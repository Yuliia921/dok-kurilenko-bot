import logging
import asyncio
from flask import Flask
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)
logger.info("üîß –ó–∞–ø—É—Å–∫ –î–æ–∫ –ö—É—Ä–∏–ª–µ–Ω–∫–æ...")

# –•—ç–Ω–¥–ª–µ—Ä /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [['–û—Å–º–æ—Ç—Ä', '–£–ó–ò'], ['–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è']]
    markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –î–æ–∫ –ö—É—Ä–∏–ª–µ–Ω–∫–æ üå∏\n–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω:",
        reply_markup=markup
    )

# –•—ç–Ω–¥–ª–µ—Ä —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user.first_name
    await update.message.reply_text(f"‚úÖ –ü—Ä–æ—Ç–æ–∫–æ–ª '{update.message.text}' —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –¥–ª—è {user}.")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    app = ApplicationBuilder().token("7495233579:AAGKqPpZY0vd3ZK9a1ljAbZjEehCCMhFIdU").build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    await app.initialize()
    await app.start()
    await app.bot.delete_webhook()
    logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")

    await app.updater.start_polling()
    await app.updater.idle()

# Flask-–∑–∞–≥–ª—É—à–∫–∞
flask_app = Flask(__name__)

@flask_app.route('/')
def index():
    return '–î–æ–∫ –ö—É—Ä–∏–ª–µ–Ω–∫–æ —Ä–∞–±–æ—Ç–∞–µ—Ç! üå∏'

# –ó–∞–ø—É—Å–∫ Flask –∏ Telegram –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
if __name__ == '__main__':
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    loop.create_task(main())
    flask_app.run(host="0.0.0.0", port=10000)


